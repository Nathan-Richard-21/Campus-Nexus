{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\campusnexus\\\\frontend\\\\student-portal-app\\\\src\\\\components\\\\ModuleSelection\\\\EmailSender.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailSender = ({\n  formData,\n  onSuccess,\n  onError\n}) => {\n  _s();\n  const [sending, setSending] = useState(false);\n  const sendEmail = useCallback(async () => {\n    setSending(true);\n    try {\n      // Format the form data for the email\n      const emailData = {\n        to_email: 'nrchinoz49@gmail.com',\n        subject: `Form Submission: ${formData.formType.toUpperCase()} Request`,\n        student_name: formData.personalDetails.name,\n        student_number: formData.personalDetails.studentNo,\n        form_type: formData.formType,\n        form_data: JSON.stringify(formData, null, 2)\n      };\n\n      // Replace these with your actual EmailJS service ID, template ID, and public key\n      await emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', emailData, 'YOUR_PUBLIC_KEY');\n      setSending(false);\n      onSuccess();\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setSending(false);\n      onError(error);\n    }\n  }, [formData, onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: `submit-btn ${sending ? 'sending' : ''}`,\n    onClick: sendEmail,\n    disabled: sending,\n    children: sending ? 'Sending...' : 'Submit Form'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailSender, \"K4FjUiZnWF+3PU/kJB6Qxr/SECQ=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","useCallback","emailjs","jsxDEV","_jsxDEV","EmailSender","formData","onSuccess","onError","_s","sending","setSending","sendEmail","emailData","to_email","subject","formType","toUpperCase","student_name","personalDetails","name","student_number","studentNo","form_type","form_data","JSON","stringify","send","error","console","type","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/campusnexus/frontend/student-portal-app/src/components/ModuleSelection/EmailSender.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport emailjs from '@emailjs/browser';\r\nimport { FormData } from './types';\r\n\r\ninterface EmailSenderProps {\r\n  formData: FormData;\r\n  onSuccess: () => void;\r\n  onError: (error: any) => void;\r\n}\r\n\r\nconst EmailSender: React.FC<EmailSenderProps> = ({ formData, onSuccess, onError }) => {\r\n  const [sending, setSending] = useState(false);\r\n  \r\n  const sendEmail = useCallback(async () => {\r\n    setSending(true);\r\n    \r\n    try {\r\n      // Format the form data for the email\r\n      const emailData = {\r\n        to_email: 'nrchinoz49@gmail.com',\r\n        subject: `Form Submission: ${formData.formType.toUpperCase()} Request`,\r\n        student_name: formData.personalDetails.name,\r\n        student_number: formData.personalDetails.studentNo,\r\n        form_type: formData.formType,\r\n        form_data: JSON.stringify(formData, null, 2)\r\n      };\r\n      \r\n      // Replace these with your actual EmailJS service ID, template ID, and public key\r\n      await emailjs.send(\r\n        'YOUR_SERVICE_ID',\r\n        'YOUR_TEMPLATE_ID',\r\n        emailData,\r\n        'YOUR_PUBLIC_KEY'\r\n      );\r\n      \r\n      setSending(false);\r\n      onSuccess();\r\n    } catch (error) {\r\n      console.error('Error sending email:', error);\r\n      setSending(false);\r\n      onError(error);\r\n    }\r\n  }, [formData, onSuccess, onError]);\r\n  \r\n  return (\r\n    <button \r\n      type=\"button\"\r\n      className={`submit-btn ${sending ? 'sending' : ''}`}\r\n      onClick={sendEmail}\r\n      disabled={sending}\r\n    >\r\n      {sending ? 'Sending...' : 'Submit Form'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default EmailSender;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,SAAS,GAAGX,WAAW,CAAC,YAAY;IACxCU,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAME,SAAS,GAAG;QAChBC,QAAQ,EAAE,sBAAsB;QAChCC,OAAO,EAAE,oBAAoBT,QAAQ,CAACU,QAAQ,CAACC,WAAW,CAAC,CAAC,UAAU;QACtEC,YAAY,EAAEZ,QAAQ,CAACa,eAAe,CAACC,IAAI;QAC3CC,cAAc,EAAEf,QAAQ,CAACa,eAAe,CAACG,SAAS;QAClDC,SAAS,EAAEjB,QAAQ,CAACU,QAAQ;QAC5BQ,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ,EAAE,IAAI,EAAE,CAAC;MAC7C,CAAC;;MAED;MACA,MAAMJ,OAAO,CAACyB,IAAI,CAChB,iBAAiB,EACjB,kBAAkB,EAClBd,SAAS,EACT,iBACF,CAAC;MAEDF,UAAU,CAAC,KAAK,CAAC;MACjBJ,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjB,UAAU,CAAC,KAAK,CAAC;MACjBH,OAAO,CAACoB,KAAK,CAAC;IAChB;EACF,CAAC,EAAE,CAACtB,QAAQ,EAAEC,SAAS,EAAEC,OAAO,CAAC,CAAC;EAElC,oBACEJ,OAAA;IACE0B,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAE,cAAcrB,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;IACpDsB,OAAO,EAAEpB,SAAU;IACnBqB,QAAQ,EAAEvB,OAAQ;IAAAwB,QAAA,EAEjBxB,OAAO,GAAG,YAAY,GAAG;EAAa;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEb,CAAC;AAAC7B,EAAA,CA5CIJ,WAAuC;AAAAkC,EAAA,GAAvClC,WAAuC;AA8C7C,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}