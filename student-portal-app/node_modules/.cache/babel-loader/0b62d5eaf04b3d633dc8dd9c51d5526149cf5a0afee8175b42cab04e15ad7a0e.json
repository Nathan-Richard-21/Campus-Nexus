{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\campusnexus\\\\frontend\\\\student-portal-app\\\\src\\\\components\\\\Chatbot\\\\Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (userInput.trim()) {\n      setMessages([...messages, {\n        text: userInput,\n        sender: 'user'\n      }]);\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          text: `Bot response to: ${userInput}`,\n          sender: 'bot'\n        }]);\n      }, 1000);\n      setUserInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: handleInputChange,\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"K0oX757VKCMKA8zy3I1tPoQS6gk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","userInput","setUserInput","messages","setMessages","handleInputChange","event","target","value","handleSendMessage","trim","text","sender","setTimeout","prevMessages","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/campusnexus/frontend/student-portal-app/src/components/Chatbot/Chatbot.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chatbot.css';\n\ninterface Message {\n    text: string;\n    sender: 'user' | 'bot';\n}\n\nconst Chatbot: React.FC = () => {\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState<Message[]>([]);\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setUserInput(event.target.value);\n    };\n\n    const handleSendMessage = () => {\n        if (userInput.trim()) {\n            setMessages([...messages, { text: userInput, sender: 'user' }]);\n            setTimeout(() => {\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { text: `Bot response to: ${userInput}`, sender: 'bot' },\n                ]);\n            }, 1000);\n            setUserInput('');\n        }\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <div className=\"chatbot-messages\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.sender}`}>\n                        {message.text}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={userInput}\n                onChange={handleInputChange}\n                placeholder=\"Type your message...\"\n            />\n            <button onClick={handleSendMessage}>Send</button>\n        </div>\n    );\n};\n\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvB,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EAEvD,MAAMS,iBAAiB,GAAIC,KAA0C,IAAK;IACtEJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIR,SAAS,CAACS,IAAI,CAAC,CAAC,EAAE;MAClBN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEQ,IAAI,EAAEV,SAAS;QAAEW,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MAC/DC,UAAU,CAAC,MAAM;QACbT,WAAW,CAAEU,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;UAAEH,IAAI,EAAE,oBAAoBV,SAAS,EAAE;UAAEW,MAAM,EAAE;QAAM,CAAC,CAC3D,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;MACRV,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5Bb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBrB,OAAA;QAAiBiB,SAAS,EAAE,WAAWG,OAAO,CAACN,MAAM,EAAG;QAAAI,QAAA,EACnDE,OAAO,CAACP;MAAI,GADPQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNzB,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXhB,KAAK,EAAEP,SAAU;MACjBwB,QAAQ,EAAEpB,iBAAkB;MAC5BqB,WAAW,EAAC;IAAsB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFzB,OAAA;MAAQ6B,OAAO,EAAElB,iBAAkB;MAAAO,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACvB,EAAA,CAvCID,OAAiB;AAAA6B,EAAA,GAAjB7B,OAAiB;AAyCvB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}